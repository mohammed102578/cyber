<?php

namespace App\Http\Controllers\admin;

use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\belong_VulnerabilityRequest;
use App\Http\Requests\Admin\VulnerabilityRequest;
use App\Repository\admin\BelongBelongVulnerabilityRepository;
use Illuminate\Http\Request;


class BelongBelongVulnerabilityController extends Controller
{


    protected $belongBelongVulnerability;
    public function __construct(BelongBelongVulnerabilityRepository $belongBelongVulnerability)
    {

        $this->belongBelongVulnerability = $belongBelongVulnerability;
    }


    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
    return $this->belongBelongVulnerability->index($request);
    }



   /**
     * Display a listing of the resource.
     * display belong_belong_vulnerability using ajax and data table
     * @return \Illuminate\Http\Response
     */
    public function get_vulnerabilities(Request $request)
    {
        return $this->belongBelongVulnerability->get_vulnerabilities($request);

    }

    public function store(belong_VulnerabilityRequest $request)
    {
        return $this->belongBelongVulnerability->store($request);

    }
    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit(Request $request)
    {
        return $this->belongBelongVulnerability->edit($request);

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(VulnerabilityRequest $request)
    {
        return $this->belongBelongVulnerability->update($request);

    }


    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy(Request $request)
    {
        return $this->belongBelongVulnerability->destroy($request);
    }
}
