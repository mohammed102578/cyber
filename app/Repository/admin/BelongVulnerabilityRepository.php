<?php

namespace App\Repository\admin;


use App\Interfaces\admin\BelongVulnerabilityInterface;
use App\Models\Activity;
use App\Models\BelongVulnerability;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class BelongVulnerabilityRepository implements BelongVulnerabilityInterface
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index($request)
    {
     try{
            $id=$request->id;
            return view('content.admin.pages.vulunerability.belong_vulnerabilities',compact('id'));

         } catch (\Exception $ex) {

            return back()->with('error',  'something went wrong');

        }
    }



   /**
     * Display a listing of the resource.
     * display belong_vulnerability using ajax and data table
     * @return \Illuminate\Http\Response
     */
    public function get_vulnerabilities($request)
    {
        try{
            if ($request->ajax())
             {
                $id=$request->id;

                $data =DB::table('belong_vulnerabilities')->where('vulnerability_id',$id)->orderBy('id','DESC')->get();

                return Datatables()->of($data)
                ->addIndexColumn()

                ->addColumn('action', function($data){
                $actionBtn = ' <div class="d-inline-block">
                <a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                <i class="bx bx-dots-vertical-rounded">

                </i></a>
                <div class="dropdown-menu dropdown-menu-end m-0">
                <a class=" edit_modal_vulnerability dropdown-item " id="'. $data->id.'"href=""data-bs-toggle="modal" data-bs-target="#edit_vulnerability"><i class="bx bx-edit text-info"></i> Edit Vulnerability</a>
                <a  style="color: #5b636c;margin-left: 18px;text-decoration: none;" id="'. $data->id.'"href="'.route('admin_belong_belong_vulnerabilities',$data->id).'"><i class="bx bxs-detail text-success"></i> Sub_vulnerability</a>

                <div class="dropdown-divider">

                </div>
                <a class=" hapus-modale dropdown-item " id="'. $data->id.'" ><i class="bx bx-trash text-danger" style="margin-bottom:6px;"></i> Delete</a>
                </div>
                </div>';
                return $actionBtn;
                })
                ->rawColumns(['action'])
                ->make(true);
            }
           } catch (\Exception $ex) {

               return back()->with('error', 'something went wrong');

           }
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store($request)
    {
    try{

            $check = BelongVulnerability::create($request->all());

            if($check){

            Activity::create(['activeable_id'=>Auth::guard('admin')->user()->id,'activeable_type'=>'App\Models\Admin\Admin',
            'activity'=>'Created Belong_vulnerability ','description_activity'=>" Created  Belong_vulnerability "]);

            return response()->json(['status' => 'success'], 200);


             }else{
               return response()->json(['status' => 'failed']);

             }

        } catch (\Exception $ex) {

             return back()->with('error',  'something went wrong');

        }
    }


    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($request)
    {
    try{
            $id = $request->id;
            return  $check = BelongVulnerability::find($id);
            $data=$check;
            return response()->json($data);
        } catch (\Exception $ex) {

            return back()->with('error',  'something went wrong');

        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update($request)
    {

      try{
            $id = $request->id;
            $check = BelongVulnerability::find($id);

            if($check)
            {
                $vulnerability_data=["vulnerability"=> $request->vulnerability];
                $data=BelongVulnerability::where('id', $check->id)->update($vulnerability_data);
                Activity::create(['activeable_id'=>Auth::guard('admin')->user()->id,'activeable_type'=>'App\Models\Admin\Admin',
                'activity'=>'Updated Belong_vulnerability ','description_activity'=>" Updated  Belong_vulnerability "]);

                return response()->json(['status' => 'success'], 200);


            }else{
                return response()->json(['status' => 'failed']);

            }

         } catch (\Exception $ex) {

             return back()->with('error',  'something went wrong');

         }

    }


    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($request)
    {
        try{
                $id = $request->id;
                $check = BelongVulnerability::find($id);

                if($check){
                $data=$check;

                $data->delete();
                Activity::create(['activeable_id'=>Auth::guard('admin')->user()->id,'activeable_type'=>'App\Models\Admin\Admin',
                            'activity'=>'Deleted Belong_vulnerability ','description_activity'=>" Deleted  Belong_vulnerability "]);

                return response()->json(['status' => 'success'], 200);


                }else{
                    return response()->json(['status' => 'failed']);

                }


            } catch (\Exception $ex) {

                return back()->with('error',  'something went wrong');

            }
    }
}
