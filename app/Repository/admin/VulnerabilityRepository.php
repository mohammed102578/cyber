<?php

namespace App\Repository\admin;


use App\Interfaces\admin\VulnerabilityInterface;
use App\Models\Activity;
use App\Models\Vulnerability;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;

class VulnerabilityRepository implements VulnerabilityInterface
{

//get vulnerability page
public function index()
{
    try{
       return view('content.admin.pages.vulunerability.vulnerabilities');
    } catch (\Exception $ex) {
       return back()->with('error',  'something went wrong');
    }
}

//get all vulnerability use ajax and yajar data table
public function get_vulnerabilities($request)
{
    try{
        if (
        $request->ajax()) {

        $data =DB::table('vulnerabilities')->orderBy('id','DESC')->get();

        return Datatables()->of($data)
        ->addIndexColumn()

        ->addColumn('action', function($data){
        $actionBtn = ' <div class="d-inline-block">
        <a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
        <i class="bx bx-dots-vertical-rounded">

        </i></a>
        <div class="dropdown-menu dropdown-menu-end m-0">
        <a class=" edit_modal_vulnerability dropdown-item " id="'. $data->id.'"href=""data-bs-toggle="modal" data-bs-target="#edit_vulnerability"><i class="bx bx-edit text-info"></i> Edit Vulnerability</a>
        <a  style="color: #5b636c;margin-left: 18px;text-decoration: none;" id="'. $data->id.'"href="belong_vulnerabilities/'.$data->id.'"><i class="bx bxs-detail text-success"></i> Sub_vulnerability</a>

        <div class="dropdown-divider">

        </div>
        <a class=" hapus-modale dropdown-item " id="'. $data->id.'" ><i class="bx bx-trash text-danger" style="margin-bottom:6px;"></i> Delete</a>
        </div>
        </div>
        ';
        return $actionBtn;
        })
        ->rawColumns(['action'])
        ->make(true);
        }
    } catch (\Exception $ex) {

       return back()->with('error', 'something went wrong');

    }
}



//stoer vulnewrabilty

public function store($request)
{

    try{
        $check = Vulnerability::create($request->all());
        if($check){
        Activity::create(['activeable_id'=>Auth::guard('admin')->user()->id,'activeable_type'=>'App\Models\Admin\Admin',
        'activity'=>'created Vulnerability','description_activity'=>"created Vulnerability "]);
        return response()->json(['status' => 'success'], 200);
        }else{
        return response()->json(['status' => 'failed']);
        }
    } catch (\Exception $ex) {

        return back()->with('error',  'something went wrong');

    }

}



//edit vulnerability use ajax
public function edit($request)
{

    try{
        $id = $request->id;
        $check = Vulnerability::find($id);
        $data=$check;
        return response()->json($data);
    } catch (\Exception $ex) {
        return back()->with('error',  'something went wrong');
    }

}

//update vulnerability
public function update($request)
{

    try{
        $id = $request->id;
        $check = Vulnerability::find($id);
        if($check){
        $vulnerability_data=[
        "vulnerability"=> $request->vulnerability,
        ];
        $data=Vulnerability::where('id', $check->id)->update($vulnerability_data);
        Activity::create(['activeable_id'=>Auth::guard('admin')->user()->id,'activeable_type'=>'App\Models\Admin\Admin',
        'activity'=>'Updated Vulnerability','description_activity'=>"updated Vulnerability "]);
        return response()->json(['status' => 'success'], 200);
        }else{
        return response()->json(['status' => 'failed']);
        }

    } catch (\Exception $ex) {
    return back()->with('error',  'something went wrong');
    }

}



// delete vulnerability
public function destroy($request)
{

    try{
        $id = $request->id;
        $check = Vulnerability::find($id);

        if($check){
        $data=$check;

        $data->delete();
        Activity::create(['activeable_id'=>Auth::guard('admin')->user()->id,'activeable_type'=>'App\Models\Admin\Admin',
        'activity'=>'deleted Vulnerability','description_activity'=>"deleted Vulnerability "]);
        return response()->json(['status' => 'success'], 200);

    }else{
        return response()->json(['status' => 'failed']);
        }
    } catch (\Exception $ex) {
        return back()->with('error',  'something went wrong');
    }
}




}
